@model SetLinksTelecom.Models.Item
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Item", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(m => m.ItemId)

    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label" })
        @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ItemCode, new { @class = "control-label" })
        @Html.EditorFor(m => m.ItemCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(m => m.ItemCode)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ItemType, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.ItemType, new List<SelectListItem>{
            new SelectListItem{ Text="Tangible", Value="Tangible"},
            new SelectListItem{ Text="Intangible", Value="Intangible"}
        }, "Select Item Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ItemType)
    </div>

    <div class="form-group">
        <button type="submit" value="Submit" class="btn btn-primary"><i class="fa fa-save"></i> Submit</button>
        <button type="reset" value="Reset" class="btn btn-warning"><i class="fa fa-refresh"></i> Reset</button>
    </div>
}
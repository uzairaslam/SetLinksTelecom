@model SetLinksTelecom.Models.Item
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Item", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(m => m.ItemId)
    @Html.HiddenFor(m => m.RevString)
    @Html.HiddenFor(m => m.AccString)
    @Html.HiddenFor(m => m.CosString)
    @Html.HiddenFor(m => m.PurDiscString)
    @Html.HiddenFor(m => m.SaleCommString)
    @Html.HiddenFor(m => m.CRevString)
    @Html.HiddenFor(m => m.PurDiscString)



    <div class="row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(m => m.ProductCategory.InventoryTypeId, new { @class = "col-form-label col-form-label-sm" })
                <br />
                @Html.DropDownListFor(m => m.ProductCategory.InventoryTypeId, new SelectList(Model.ProductCategory.InventoryTypes, "InventoryTypeId", "Name"), "Select Inventory Type", new { @class = "ddl form-control form-control-sm" })
                @Html.ValidationMessageFor(m => m.ProductCategory.InventoryTypeId)
            </div>
        </div>


        <div class="col">
            <div class="form-group">
                @Html.LabelFor(m => m.ProductCategoryId, new { @class = "col-form-label col-form-label-sm" })
                <br />
                @Html.DropDownListFor(m => m.ProductCategoryId, new SelectList(Model.ProductCategories, "ProductCategoryId", "Name"), "Select Item Category", new { @class = "ddl form-control form-control-sm" })
                @Html.ValidationMessageFor(m => m.ProductCategoryId)
            </div>
        </div>

        <div class="col">
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-form-label col-form-label-sm" })
                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>


        <div class="col">
            <div class="form-group">
                @Html.LabelFor(m => m.ItemCode, new { @class = "col-form-label col-form-label-sm" })
                @Html.EditorFor(m => m.ItemCode, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                @Html.ValidationMessageFor(m => m.ItemCode)
            </div>
        </div>

        <div class="col">
            <div class="form-group">
                @Html.LabelFor(m => m.SaleRate, new { @class = "col-form-label col-form-label-sm" })
                @Html.EditorFor(m => m.SaleRate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                @Html.ValidationMessageFor(m => m.SaleRate)
            </div>
        </div>

    </div>

    <div class="row">
    </div>
        @*<div class="form-group">
                @Html.LabelFor(m => m.Subname, new { @class = "col-form-label col-form-label-sm" })
                @Html.EditorFor(m => m.Subname, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                @Html.ValidationMessageFor(m => m.Subname)
            </div>*@

        <div class="form-group">
            <button type="submit" value="Submit" class="btn btn-primary"><i class="fa fa-save"></i> Submit</button>
            <button type="reset" value="Reset" class="btn btn-warning"><i class="fa fa-refresh"></i> Reset</button>
        </div>
        }

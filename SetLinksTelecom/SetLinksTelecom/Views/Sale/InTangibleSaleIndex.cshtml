@model SetLinksTelecom.DTO.DtoInTangibleSale

@{
    ViewBag.Title = "InTangibleSaleIndex";
    if (Session["userName"] == null)
    {
        Response.Redirect("~/User/Login");
    }
}

<div class="jumbotron" style="padding-top: 13px;">
    <h4>In Tangible Sale Portal</h4>

    @using (Html.BeginForm("SaveInTangibleSale", "Sale", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
    {

        @Html.HiddenFor(m => m.SaleId)

        @Html.HiddenFor(m => m.PersonId)

        @*<div class="row">
                <div class="col-2"><h5>@Html.LabelFor(m => m.PersonName, new { @class = "control-label" })</h5></div>
                <div class="col-3">
                    @Html.EditorFor(m => m.PersonName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.PersonName)
                </div>
                <div class="col-1"></div>
                <div class="col-2"><h5>@Html.LabelFor(m => m.Date, new { @class = "control-label" })</h5></div>
                <div class="col-3">@Html.EditorFor(m => m.Date, new { htmlAttributes = new { @class = "form-control" } })</div>
                <div class="col-1"></div>
            </div>*@
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(m => m.PersonName, new { @class = "col-form-label col-form-label-sm" })
                    @Html.EditorFor(m => m.PersonName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(m => m.PersonName)
                </div>
            </div>

            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(m => m.Date, new { @class = "col-form-label col-form-label-sm" })
                    @Html.EditorFor(m => m.Date, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>

            </div>


            <div class="col">
                <div class="form-group" id="dvRemarks">
                    @Html.LabelFor(m => m.Remarks, new { @class = "col-form-label col-form-label-sm" })
                    @Html.EditorFor(m => m.Remarks, new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "Remarks" }})
                </div>

            </div>
        </div>

        <hr />
        @*<div class="clear-fix">
                &nbsp;
            </div>*@

        <div class="row">
            <div class="col">
                <div class="form-group">
                    <a class="btn btn-sm btn-success" style="margin-bottom: 10px;" onclick="popUpForm('@Url.Action("PurchaseGrid", "Purchase")', 'Purchase')"><i class="fa fa-plus"></i> Add Item</a>
                </div>
            </div>
            
            <div class="col">
                <button type="button" class="btn btn-primary btn-sm">
                    @Html.LabelFor(m => m.OverAllTotal, new { @class = "col-form-label col-form-label-sm" })
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <span id="OverAllTotal">
                        @Html.DisplayFor(m => m.OverAllTotal)
                    </span>
                </button>
            </div>
            <div class="col">
                <div class="form-group">
                    <button type="submit" value="Submit" class="btn btn-sm btn-primary" style="margin-right: 10px;"><i class="fa fa-save"></i> Submit</button>
                    <button type="reset" value="Reset" class="btn btn-sm btn-warning"><i class="fa fa-refresh"></i> Reset</button>
                </div>
            </div>

        </div>


            <table id="intangibleItemsSale" class="table table-hover">
                <thead>
                    <tr>
                        <th>Item Code</th>
                        <th>Item</th>
                        <th>Balance Applied</th>
                        <th>Comm. Per</th>
                        <th>Balance Transferred</th>
                        <th>Line</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>


            <div class="clear-fix">
                &nbsp;
            </div>

            @*<div class="card text-white bg-secondary mb-3" style="max-width: 15rem;">
                <div class="card-header">
                    @Html.LabelFor(m => m.OverAllTotal, new { @class = "control-label" })
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <span id="OverAllTotal">
                        @Html.DisplayFor(m => m.OverAllTotal)
                    </span>
                </div>
            </div>
            <div class="clear-fix">
                &nbsp;
            </div>
            <div class="form-group">
                <button type="submit" value="Submit" class="btn btn-primary" style="margin-right: 10px;"><i class="fa fa-save"></i> Submit</button>
                <button type="reset" value="Reset" class="btn btn-warning"><i class="fa fa-refresh"></i> Reset</button>
            </div>*@
    }
</div>

<link href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" rel="stylesheet" />

@section scripts
{

    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>

    <script>
        var tangibleItemsSale, purchaseTable;
        $(document).ready(function () {
            $('#PersonName').keypress(function (event) {

                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode == '13') {
                    popUpForm('@Url.Action("PersonGrid", "Person")', "Person");
                } else {
                    event.preventDefault();
                }
                return false;
            });
            tangibleItemsSale = $('[id$=tangibleItemsSale]').DataTable({
                "ordering": false,
                "columnDefs": [
                    { "width": "60", "targets": 0 },
                    { "width": "90", "targets": 1 },
                    { "width": "120", "targets": 2 },
                    { "width": "120", "targets": 3 },
                    { "width": "140", "targets": 4 },
                    { "width": "160", "targets": 5 }
                ]
            });
        });

        function SubmitForm(form) {
            event.preventDefault();
            $.validator.unobtrusive.parse(form);


            if ($(form).valid()) {

                var pur = $('.PurchaseIdinpt');

                var items = [];

                $.each(pur,
                    function () {
                        console.log($(this).closest('tr').find('.qtyTxt').val());
                        items.push({
                            PurchaseId: $(this).val(),
                            ItemCode: $(this).closest('td').get(0).innerText,
                            ItemName: $(this).closest('tr').find('.ItemName').get(0).innerText,
                            'Qty': $(this).closest('tr').find('.qtyTxt').val(),
                            Rate: $(this).closest('tr').find('.Rate').val(),
                            SubTotal: $(this).closest('tr').find('.subTotal').get(0).innerText,
                            LineId: $(this).closest('tr').find('.LineId').val()
                        });
                    });

                //console.log(items);


                var dtoTangibleSale = {
                    SaleId: 0,
                    PersonId: $('#PersonId').val(),
                    PersonName: $('#PersonName').val(),
                    Date: $('#Date').val(),
                    Remarks: $('#Remarks').val(),
                    OverAllTotal: $('#OverAllTotal').html(),
                    ItemSales: items
                }
                console.log(dtoTangibleSale);

                $.ajax({
                    type: "POST",
                    url: form.action,
                    data: dtoTangibleSale,
                    success: function (data) {
                        if (data.success) {

                            resetForm();
                            $.notify(
                                data.message,
                                {
                                    position: "top center",
                                    className: "success"
                                }
                            );

                        }
                    }
                });
            } else {
                $.notify(
                    "Validation Error",
                    {
                        position: "top center",
                        className: "error"
                    }
                );
            }
            return false;
        }

        function resetForm() {
            window.setInterval(function () {
                window.location = ("@Url.Action("InTangibleSaleIndex", "Sale")");
            },
                2000);
        }


        function popUpForm(url, type) {
            //console.log(type);
            console.log($('#PersonId').val());

            if ((type === 'Purchase' && typeof $('#PersonId').val() !== 'undefined' && $('#PersonId').val() != 0 && $('#PersonId').val()) || type !== 'Purchase') {
                var formDiv = $('<div class="popDiv" />');
                $.get(url).done(function (response) {
                    formDiv.html(response);

                    popUp = formDiv.dialog({
                        autoOpen: true,
                        resizable: false,
                        title: 'Select Items',
                        draggable: false,
                        width: $(window).width() - 50,
                        height: 600,
                        modal: true,
                        close: function () {
                            dataTable.destroy();
                            popUp.dialog('close');
                            $('.popDiv').remove();
                        }
                    });
                    if (type === 'Purchase')
                        loadDialogContent();
                    else
                        loadPersonDialogContent();
                });
            } else {
                $.notify(
                    'Select Person First',
                    {
                        position: "top center",
                        className: "error"
                    }
                );
            }
        }


        var dataTable;

        function loadDialogContent() {
            dataTable = $("#purchaseTable").DataTable({
                "ajax": {
                    "url": "/Purchase/GetData?inventoryType=InTangible",
                    "type": "Get",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "PortalName", "name": "PortalName" },
                    { "data": "InventoryType", "name": "InventoryType" },
                    { "data": "CategoryName", "name": "CategoryName" },
                    { "data": "ItemName", "name": "ItemName" },
                    { "data": "Subname", "name": "Subname" },
                    { "data": "Qty", "name": "Qty" },
                    { "data": "Rate", "name": "Rate" },
                    { "data": "Total", "name": "Total" },
                    { "data": "Percentage", "name": "Percentage" },
                    { "data": "DatePurchasedFormatted", "name": "DatePurchased" }
                ],
                "language": {
                    "emptyTable": "No data found, Please Click on <b>Add New</b> button",
                    "processing": "Processing... Please wait"
                },
                keys: true
            });

            //bind row event
            $('#purchaseTable tbody').on('dblclick',
                'tr',
                function () {
                    var data = dataTable.row(this).data();
                    saleItemRow('@Url.Action("SaleInTangibleItemRow", "Sale")?PurchaseId=' + data['PurchaseId'] + '&PersonId=' + $('#PersonId').val());
                    popUp.dialog('close');
                });
        }


        function saleItemRow(url) {
            var rowItem = $('<tr />');
            $.get(url).done(function (response) {
                rowItem.html(response);

                tangibleItemsSale.row.add(rowItem).draw(true);
                //$('.ddl').chosen();
                changeOverallStatus();
            });
        }

        function qtyChanged(txt) {

            var row = $($(txt).closest('tr').get(0));
            var subTotal = row.find('.subTotal').get(0);
            var Rate = row.find('.Rate').val();
            var Qty = row.find('.qtyTxt').val();
            //console.log(Rate + ' ' + Qty);
            if (Qty != null && Qty != 0 && Rate != null && Rate != 0) {
                subTotal.innerHTML = parseFloat(((parseFloat(Rate) * Qty) / 100)) + parseFloat(Qty);
            } else {
                subTotal.innerHTML = '0';
            }
            changeOverallStatus();
        }

        function loadPersonDialogContent() {
            dataTable = $("#personTable").DataTable({
                "ajax": {
                    "url": "/Person/GetData",
                    "type": "Get",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "Name", "name": "Name" },
                    { "data": "FatherName", "name": "FatherName" },
                    { "data": "Gender", "name": "Gender" },
                    { "data": "CNIC", "name": "CNIC" },
                    { "data": "DOBFormatted", "name": "DOB" },
                    { "data": "Designation", "name": "Designation" }
                ],
                "language": {
                    "emptyTable": "No data found, Please Click on <b>Add New</b> button",
                    "processing": "Processing... Please wait"
                },
                keys: true
            });

            //bind row event
            $('#personTable tbody').on('dblclick',
                'tr',
                function () {
                    var data = dataTable.row(this).data();
                    $('#PersonId').val(data['PersonId']);
                    $('#PersonName').val(data['Name']);
                    popUp.dialog('close');
                });
        }


        function removeItem(row) {
            //$("#tangibleItemsSale").find("tr:gt(0)").remove();
            var getRow = $(row).closest('tr').get(0);
            tangibleItemsSale.row(getRow).remove().draw();
            changeOverallStatus();
        }

        function changeOverallStatus() {
            var sum = 0;
            $('.subTotal').each(function () {
                sum += parseFloat($(this).text()); // Or this.innerHTML, this.innerText
            });
            $('#OverAllTotal').html(sum);

        }

    </script>
}
